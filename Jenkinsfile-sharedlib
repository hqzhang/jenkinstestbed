//////
import org.json.JSONObject;
import org.json.XML;
import org.json.JSONException;
////import java.nio.file.Files;
//import java.nio.file.Path;
def brch= scm.branches[0].toString().replace('*/','')
def libver="bitbucket-groovytest-lib@Menu-demo-good"
//1) library identifier: "bitbucket-groovytest-lib@${brch}", retriever: modernSCM(
//  [$class: 'GitSCMSource', remote: repo, credentialsId: ''])  //from any repo without definiation src excluded
library identifier: "bitbucket-groovytest-lib@${brch}", retriever:legacySCM(scm)  //from local repo without definiation
//3):library("bitbucket-groovytest-lib@${brch}") _         //from repo defined in system config, src excluded
//@Library('bitbucket-groovytest-lib@Menu-demo-good')      //from repo defined in system config, vars/src/resouces included


properties([
    parameters([
        choice( name: 'Environment', description: '', choices: ['DEV','BAT']  ),
        choice( name: 'Profile', description: '', choices: ['ADS.yaml','RTE.yaml'] ),
        [$class: 'CascadeChoiceParameter', choiceType: 'PT_SINGLE_SELECT', filterLength: 1, filterable: false, 
          name: 'testscriptler', randomName: 'choice-parameter-670607990498', 
          referencedParameters: 'Environment,Profile', 
          script: [$class: 'ScriptlerScript', isSandboxed: true, 
          scriptlerBuilder: [builderId: '1720544636065_1', 
          parameters: [[name: 'Environment', value: '$Environment'], [name: 'Profile', value: '$Profile']],
          propagateParams: false, scriptId: 'testid.groovy']]]])])

pipeline {
    agent any
    stages {
        stage('Create List') {
            steps {
                script {
                    echo "STAGE: create List..."
                    echo "params=$params"
                   
                }
            }
        }
   }
}


